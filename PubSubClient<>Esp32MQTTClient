#include<WiFi.h>
#include <PubSubClient.h>
#include "Esp32MQTTClient.h"
//--------------------------------------------------------------------
#include "DHT.h"
//-------------------------------------------------------------------

const char* ssid = "Okura&Aguiar";
const char* password = "*welcome03";
const char* mqtt_server = "192.168.15.23";

int LED = 13;            

WiFiClient espClient;
PubSubClient client(espClient);


//----------------------Definição-------------------------------------
#define DHTPIN 5
#define DHTTYPE DHT22   // DHT 22  (AM2302), AM2321


//----------------------Inicio----------------------------------------
DHT dht(DHTPIN, DHTTYPE);

//----------------------Variaveis-------------------------------------
float temp;
float hum;
char dhttempString[8];
char dhtumidString[8];
//--------------------------------------------------------------------

void setup()
{
  Serial.begin(115200);
  pinMode(LED, OUTPUT);
  setup_wifi();
  client.setServer(mqtt_server, 1884);
  client.setCallback(callback);
  //------------------------------------
    dht.begin();
  //------------------------------------
}
void callback(char* topic, byte* payload, unsigned int length)
{
  Serial.print("Menssagem recebida[");
  Serial.print(topic);
  Serial.print("] ");
  for (int i = 0; i < length; i++)
  {
    Serial.print((char)payload[i]);
  }
  Serial.println();

  if ((char)payload[0] == '0')
  {
    Serial.println("LOW");
    digitalWrite(LED, LOW);
  }
  if ((char)payload[0] == '1')
  {
    Serial.println("HIGH");
    digitalWrite(LED , HIGH);
  }
}
void setup_wifi()
{
  delay(10);
  Serial.println();
  Serial.print("Conectado a rede: ");
  Serial.println(ssid);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED)
  {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.println("WiFi Conectado");
  Serial.println("IP: ");
  Serial.println(WiFi.localIP());
}
void reconnect()
{
  while (!client.connected())
  {
    Serial.print("Conectando ao MQTT...");
    
    if (client.connect("ESP32Client"))
    {
      Serial.println("Conectado");      
      client.publish("event", "Análise Climática Conectada");
      
      client.subscribe("event");
    }
    else
    {
      Serial.print("Erro:");
      Serial.print(client.state());
      Serial.println(" reconectando em 5 segundos");
      
      delay(5000);
    }
  }
}
void loop()
{
  //----------------------------------
   hum = dht.readHumidity();
  temp = dht.readTemperature();
  //-----------------------------------
  if (!client.connected())
  {
    reconnect();
  }
  //---------------------------------------
  dtostrf(temp, 1, 2, dhttempString);
  dtostrf(hum, 1, 2, dhtumidString);
   client.publish("ESP32/temp", dhttempString);
  client.publish("ESP32/umid", dhtumidString);
  //-------------------------------------------
  client.loop();
  long now = millis();
}
